/*
* generated by Xtext
*/
grammar InternalUnorderedgroups;

options {
	superClass=AbstractInternalAntlrParser;

}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import.
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.UnorderedgroupsGrammarAccess;

}

@parser::members {

	private UnorderedgroupsGrammarAccess grammarAccess;

    public InternalUnorderedgroupsParser(TokenStream input, UnorderedgroupsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
	return "Employee";
	}

	@Override
	protected UnorderedgroupsGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}




// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	 iv_ruleEmployee=ruleEmployee
	 { $current=$iv_ruleEmployee.current; }
	 EOF
;

// Rule Employee
ruleEmployee returns [EObject current=null]
    @init { enterRule();
    }
    @after { leaveRule(); }:
(

(
	{
	  getUnorderedGroupHelper().enter(grammarAccess.getEmployeeAccess().getUnorderedGroup());
	}
	(
		(

			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 0)}?=>(
					{
					  getUnorderedGroupHelper().select(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 0);
					}
					({true}?=>(	otherlv_1='firstName'
    {
	newLeafNode(otherlv_1, grammarAccess.getEmployeeAccess().getFirstNameKeyword_0_0());
    }
(
(
		lv_firstName_2_0=RULE_ID
		{
			newLeafNode(lv_firstName_2_0, grammarAccess.getEmployeeAccess().getFirstNameIDTerminalRuleCall_0_1_0());
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
		setWithLastConsumed(
			$current,
			"firstName",
			lv_firstName_2_0,
			"ID");
	    }

)
)))
					{
					  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEmployeeAccess().getUnorderedGroup());
					}
				)
			)  |

			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 1)}?=>(
					{
					  getUnorderedGroupHelper().select(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 1);
					}
					({true}?=>(	otherlv_3='age'
    {
	newLeafNode(otherlv_3, grammarAccess.getEmployeeAccess().getAgeKeyword_1_0());
    }
(
(
		lv_age_4_0=RULE_INT
		{
			newLeafNode(lv_age_4_0, grammarAccess.getEmployeeAccess().getAgeINTTerminalRuleCall_1_1_0());
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
		setWithLastConsumed(
			$current,
			"age",
			lv_age_4_0,
			"INT");
	    }

)
)))
					{
					  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEmployeeAccess().getUnorderedGroup());
					}
				)
			)  |

			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 2)}?=>(
					{
					  getUnorderedGroupHelper().select(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 2);
					}
					({true}?=>(	otherlv_5='lastName'
    {
	newLeafNode(otherlv_5, grammarAccess.getEmployeeAccess().getLastNameKeyword_2_0());
    }
(
(
		lv_lastName_6_0=RULE_ID
		{
			newLeafNode(lv_lastName_6_0, grammarAccess.getEmployeeAccess().getLastNameIDTerminalRuleCall_2_1_0());
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
		setWithLastConsumed(
			$current,
			"lastName",
			lv_lastName_6_0,
			"ID");
	    }

)
)))
					{
					  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEmployeeAccess().getUnorderedGroup());
					}
				)
			)  |

			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 3)}?=>(
					{
					  getUnorderedGroupHelper().select(grammarAccess.getEmployeeAccess().getUnorderedGroup(), 3);
					}
					({true}?=>(	otherlv_7='yearOfBirth'
    {
	newLeafNode(otherlv_7, grammarAccess.getEmployeeAccess().getYearOfBirthKeyword_3_0());
    }
(
(
		lv_yearOfBirth_8_0=RULE_INT
		{
			newLeafNode(lv_yearOfBirth_8_0, grammarAccess.getEmployeeAccess().getYearOfBirthINTTerminalRuleCall_3_1_0());
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmployeeRule());
	        }
		setWithLastConsumed(
			$current,
			"yearOfBirth",
			lv_yearOfBirth_8_0,
			"INT");
	    }

)
)))
					{
					  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getEmployeeAccess().getUnorderedGroup());
					}
				)
			)

		)+
		{getUnorderedGroupHelper().canLeave(grammarAccess.getEmployeeAccess().getUnorderedGroup())}?
	)
)
	{
	  getUnorderedGroupHelper().leave(grammarAccess.getEmployeeAccess().getUnorderedGroup());
	}

)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
