/**
 * generated by Xtext
 */
package org.xtext.quickfix.ui.quickfix;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.edit.IModification;
import org.eclipse.xtext.ui.editor.model.edit.IModificationContext;
import org.eclipse.xtext.ui.editor.model.edit.ISemanticModification;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.util.Strings;
import org.eclipse.xtext.validation.Issue;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.quickfix.exampleQuickfix.City;
import org.xtext.quickfix.exampleQuickfix.ExampleQuickfixFactory;
import org.xtext.quickfix.exampleQuickfix.Sight;
import org.xtext.quickfix.validation.ExampleQuickfixValidator;

/**
 * Custom quickfixes.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#quickfixes
 */
@SuppressWarnings("all")
public class ExampleQuickfixQuickfixProvider extends DefaultQuickfixProvider {
  @Fix(ExampleQuickfixValidator.INVALID_NAME)
  public void capitalizeName(final Issue issue, final IssueResolutionAcceptor acceptor) {
    String[] _data = issue.getData();
    String _head = IterableExtensions.<String>head(((Iterable<String>)Conversions.doWrapArray(_data)));
    String _plus = ("Capitalize the name \"" + _head);
    String _plus_1 = (_plus + "\".");
    acceptor.accept(issue, "Capitalize name", _plus_1, 
      "upcase.png", new IModification() {
      @Override
      public void apply(final IModificationContext context) throws Exception {
        final IXtextDocument xtextDocument = context.getXtextDocument();
        Integer _offset = issue.getOffset();
        int _plus = ((_offset).intValue() + 1);
        final String firstLetter = xtextDocument.get(_plus, 1);
        Integer _offset_1 = issue.getOffset();
        int _plus_1 = ((_offset_1).intValue() + 1);
        String _upperCase = firstLetter.toUpperCase();
        xtextDocument.replace(_plus_1, 1, _upperCase);
      }
    });
  }
  
  @Fix(ExampleQuickfixValidator.CITY_NOT_INTERESTING)
  public void addSightToCity(final Issue issue, final IssueResolutionAcceptor acceptor) {
    acceptor.accept(issue, "Add sight to make city more interesting", 
      "Add a random sight, to make the city look more interesting.", 
      null, new ISemanticModification() {
      @Override
      public void apply(final EObject element, final IModificationContext context) throws Exception {
        final City c = ((City) element);
        final Sight sight = ExampleQuickfixFactory.eINSTANCE.createSight();
        sight.setName("Central Station");
        String _name = c.getName();
        String _firstUpper = Strings.toFirstUpper(_name);
        String _plus = ("The famous central station of " + _firstUpper);
        String _plus_1 = (_plus + ".");
        sight.setDescription(_plus_1);
        EList<Sight> _sights = c.getSights();
        _sights.add(sight);
      }
    });
  }
}
